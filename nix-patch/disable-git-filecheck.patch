diff --git a/src/archiveClient/handler_findGitFiles_test.go b/src/archiveClient/handler_findGitFiles_test.go
index e14f09a..358907d 100644
--- a/src/archiveClient/handler_findGitFiles_test.go
+++ b/src/archiveClient/handler_findGitFiles_test.go
@@ -1,11 +1,9 @@
 package archiveClient
 
 import (
-	"context"
 	"os"
 	"testing"
 
-	"github.com/stretchr/testify/require"
 )
 
 var findGitFilesTestCases = []struct {
@@ -37,23 +35,6 @@ func TestFindGitFiles(t *testing.T) {
 	}
 	defer def()
 
-	ctx := context.TODO()
-	for _, test := range findGitFilesTestCases {
-		t.Run(test.name+"-in-"+test.workingDir, func(t *testing.T) {
-			assert := require.New(t)
-			archiver := New(Config{})
-
-			files, err := archiver.FindGitFiles(ctx, test.workingDir)
-			assert.NoError(err)
-
-			output := make([]string, 0, len(files))
-			for _, f := range files {
-				output = append(output, f.ArchivePath)
-			}
-
-			assert.Equal(test.output, output)
-		})
-	}
 }
 
 // creates a non ascii file and returns a function to clean it up afterward
diff --git a/src/cmd/servicePush.go b/src/cmd/servicePush.go
index a2fa157..2887bf4 100644
--- a/src/cmd/servicePush.go
+++ b/src/cmd/servicePush.go
@@ -7,7 +7,6 @@ import (
 	"path/filepath"
 	"time"
 
-	"github.com/zeropsio/zcli/src/archiveClient"
 	"github.com/zeropsio/zcli/src/cmd/scope"
 	"github.com/zeropsio/zcli/src/cmdBuilder"
 	"github.com/zeropsio/zcli/src/httpClient"
@@ -35,9 +34,6 @@ func servicePushCmd() *cmdBuilder.Cmd {
 		LoggedUserRunFunc(func(ctx context.Context, cmdData *cmdBuilder.LoggedUserCmdData) error {
 			uxBlocks := cmdData.UxBlocks
 
-			arch := archiveClient.New(archiveClient.Config{
-				DeployGitFolder: cmdData.Params.GetBool("deployGitFolder"),
-			})
 
 			uxBlocks.PrintInfo(styles.InfoLine(i18n.T(i18n.PushDeployCreatingPackageStart)))
 
@@ -98,13 +94,6 @@ func servicePushCmd() *cmdBuilder.Cmd {
 								return err
 							}
 							defer os.Remove(tempFile)
-							files, err := arch.FindGitFiles(ctx, cmdData.Params.GetString("workingDir"))
-							if err != nil {
-								return err
-							}
-							if err := arch.TarFiles(f, files); err != nil {
-								return err
-							}
 							if err := f.Close(); err != nil {
 								return err
 							}
